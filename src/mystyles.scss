@charset "utf-8";

// Import a Google Font
@import url('https://fonts.googleapis.com/css?family=Nunito:400,700');

// Set your brand colors
$beige-lighter: #EFF0EB;
$primary: #1B82C3;
$info: #2854bc;
$link: #4F4CD1;
$warning: #FFAF40;
$danger: #E23600;

// Update Bulma's global variables
$family-sans-serif: "Nunito", sans-serif;
$widescreen-enabled: true;
$fullhd-enabled: false;

// Update some of Bulma's component variables
$body-background-color: $beige-lighter;
$input-shadow: none;

// Have wider modals
$modal-content-width: 900px;

// Used for css transitions
$transition-short: 0.2s;
$transition-medium: 0.5s;

// Import only what you need from Bulma
@import "../node_modules/bulma/sass/utilities/_all.sass";
@import "../node_modules/bulma/sass/base/_all.sass";
@import "../node_modules/bulma/sass/grid/_all.sass";
@import "../node_modules/bulma/sass/elements/button.sass";
@import "../node_modules/bulma/sass/elements/container.sass";
@import "../node_modules/bulma/sass/elements/box.sass";
@import "../node_modules/bulma/sass/elements/form.sass";
@import "../node_modules/bulma/sass/elements/icon.sass";
@import "../node_modules/bulma/sass/elements/title.sass";
@import "../node_modules/bulma/sass/elements/tag.sass";
@import "../node_modules/bulma/sass/elements/notification.sass";
@import "../node_modules/bulma/sass/elements/other.sass";
@import "../node_modules/bulma/sass/elements/content.sass";
@import "../node_modules/bulma/sass/layout/section.sass";
@import "../node_modules/bulma/sass/components/breadcrumb.sass";
@import "../node_modules/bulma/sass/components/level.sass";
@import "../node_modules/bulma/sass/components/modal.sass";
@import "../node_modules/bulma/sass/components/dropdown.sass";
@import "../node_modules/bulma/sass/components/navbar.sass";
@import "../node_modules/bulma/sass/components/card.sass";
@import "../node_modules/bulma/sass/components/tabs.sass";
@import "../node_modules/bulma/sass/layout/hero.sass";

.title {
    font-weight: normal;
}

// These should be moved to appropriate locations
// Used by the RichFieldEditor
.listed-flashcard {
    & .tag-editor {
        padding: 0.5rem;
        .tag-input {
            background-color: white;
            border: 0;
        }
    }
    & .card {
        display: flex;

        & .flashcard-sidebar {
            display: flex;
            padding: 0.25rem;
            justify-content: center;
            flex-direction: column;
            border-left: 1px solid $grey-lighter;
            & > a {
                color: $text;
                margin: 0.25rem;
            }
        }
        & > .main {
            flex-grow: 1;
        }
        
        & .flashcard-faces {
            & .flashcard-face {
                & .flashcard-face-toolbar {
                    display: flex;
                    padding: 0.25rem;
                    flex-wrap: wrap;
                    flex-grow: 0;

                    > .field {
                        margin: 0.25rem;
                    }
                }
                & .flashcard-face-content {
                    &:not(:first-child) {
                        /* border-left: 1px solid $grey-lighter; */
                    }

                    &.no-content {
                        background: repeating-linear-gradient(-45deg,transparent, transparent 20px, $grey-lighter 20px, $grey-lighter 40px); 
                    }
                }
            }
        }
    }
}

/**
 * Class can be added to bulma columns and child column and their children will all have the same height
 */
.columns.same-height {
    justify-content: stretch;
    & > .column {
        display: flex;
        justify-content: stretch;
        flex-direction: column;

        & > * {
            flex-grow: 1;
        }
    }
}

.editor-card-divider {
    cursor: pointer;
    padding: 1rem 0;
    margin: 1rem 0;
    position: relative;
    &::before {
        content: " ";
        display: block;
        background-color: $grey-lighter;
        height: 2px;
    }
    & > * {
        border-radius: $radius;
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translateX(-50%) translateY(-50%);
    }

    &.is-subtle {
        & > * {
            display: flex;
            width: 2rem;
            height: 2rem;
            border-radius: 50%;
            border: 2px solid $grey-lighter;
        }
    }
}

.reveal-field {
    cursor: pointer;
    color: #AAA;
    &:before {
        content: "[";
        color: black;
    }
    &:after {
        content: "]";
        color: black;
    }
    &.editor {
        cursor: inherit;
    }
    &.is-revealed {
        color: lighten($text, 10%);
    }
}

.card-content.content {
    margin-bottom: 0;
}

.editable-text {
    display: inline-block;
    padding: 0.2rem 0.5rem;
    border: 1px solid transparent;
    border-radius: 3px;
    margin: -0.2rem 0;

    color: inherit;
    font: inherit;
    background: transparent;

    &:empty:before {
        content: "\00a0";
    }

    &:first-child {
        margin-left: -0.5rem;
    }

    &:hover, &:focus {
        background-color: rgba(black, $alpha: 0.2);
    }
    &.read-only {
        background-color: transparent;
    }
}

.tooltip {
    position: relative;
    & > .tooltip-tip {
        position: absolute;
        bottom: calc(100% + 0.5rem);
        max-width: 8rem;
        color: $text;
        white-space: normal;
        font-family: $family-primary;
        font-size: $size-normal;
        width: 14rem;
        background-color: white;
        padding: 0.5rem;
        border-radius: $radius;
        box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);
        transform: translateX(-50%);
        left: 50%;
        z-index: 50;
        text-align: center;
    }
}

.transition {
    &.slide {
        will-change: height;
        overflow: hidden;
        transition: height $transition-short, opacity $transition-short;
        transition-timing-function: ease-out;
    }

    &.resize {
        overflow: hidden;
        transition: height $transition-short, opacity $transition-short;
        transition-timing-function: ease-in-out;
    }

    &.fade {
        transition: opacity $transition-short;
        transition-timing-function: ease-in-out;
    }
}

.placeholder-text {
    @keyframes placeholderShimmer{
        0%{
            background-position: -468px 0
        }
        100%{
            background-position: 468px 0
        }
    }

    display: block;
    overflow: hidden;

    &::before {
        content: " ";
        border-radius: $radius-small;
        $placeholder-color: $grey-lighter;
        display: block;
        height: 0.8em;
        margin: 0.1em 0;
        animation-duration: 1.5s;
        animation-fill-mode: forwards;
        animation-iteration-count: infinite;
        animation-name: placeholderShimmer;
        animation-timing-function: linear;
        background: $placeholder-color;
        background: linear-gradient(to right, $placeholder-color 8%, darken($placeholder-color, 8%) 18%, $placeholder-color 33%);
        background-size: 800px 104px;
    }
}

.hero + .navbar {
    background-color: $info;
    .navbar-item {
        color: white;
        &:hover {
            color: black;
        }
    }
}

.slider-control {
    display: flex;
    height: 2.25em;
    & > input {
        width: 5rem;
    }
    & > input + .slider {
        margin-left: 1rem;
    }
}

.slider {
    flex-grow: 1;
    position: relative;
    .slider-sections {
        background-color: $text;
        border-radius: $radius-small;
        overflow: hidden;
        position: absolute;
        left: 0;
        right: 0;
        top: 50%;
        height: 0.5rem;
        transform: translateY(-50%);
        .slider-section {
            position: absolute;
            top: 0;
            bottom: 0;
        }
    }
    .slider-pointer {
        width: 0.8rem;
        background-color: white;
        border: 1px solid darken($grey-lighter, 10%);
        box-shadow: 0 0 2px rgba(0, 0, 0, 0.1);
        border-radius: $radius-small;
        position: absolute;
        transform: translateX(-50%);
        bottom: 0;
        top: 0;
        cursor: pointer;
    }
}